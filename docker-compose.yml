version: '3.8'

services:
  # Manager Services
  user_manager:
    build:
      context: manager_services/user_manager
    ports:
      - "8000:8000"  # App port
    depends_on:
     - redis
     - mongo
    networks:
      - network-dapr

  user-dapr:
    image: "daprio/daprd:edge"
    command: [ "./daprd",
               "-app-port", "8000",
               "-app-id", "user_manager",
               "-app-protocol", "http",
               "-dapr-http-port", "3500",
               "--resources-path", "./dapr/components",
               "-log-level", "debug"
    ]
    volumes:
      - "./dapr/:/dapr"
    depends_on:
      - user_manager
      - mongo
    network_mode: "service:user_manager"

  news_manager:
    env_file: "news_manager.env"
    build:
      context: manager_services/news_manager
    ports:
      - "8001:8001"
    depends_on:
      - redis
      - mongo
    command: >
      uvicorn main:app --host 0.0.0.0 --port 8000
    networks:
      - network-dapr

  news-dapr:
    image: "daprio/daprd:edge"
    command: [ "./daprd",
               "-app-port", "8000",
               "-app-id", "news_manager",
               "-app-protocol", "http",
               "-dapr-http-port", "3500",
               "--resources-path", "./dapr/components",
               "-log-level", "debug"
    ]
    volumes:
      - "./dapr/:/dapr"
    depends_on:
      - news_manager
    network_mode: "service:news_manager"

  # Accessory Services
  notification_service:
    env_file: "notification_service.env"
    build:
      context: accessory_services/notification_service
    ports:
      - "8002:8002"
    depends_on:
      - redis
      - mongo
    volumes:
      - ./components:/components
    command: >
      uvicorn main:app --host 0.0.0.0 --port 8001
    networks:
      - network-dapr

  notification-dapr:
    image: "daprio/daprd:edge"
    command: [ "./daprd",
               "-app-port", "8001",
               "-app-id", "notification_manager",
               "-app-protocol", "http",
               "-dapr-http-port", "3500",
               "--resources-path", "./dapr/components",
               "-log-level", "debug"
    ]
    volumes:
      - "./dapr/:/dapr"
    depends_on:
      - notification_service
    network_mode: "service:notification_service"

  webhook_service:
    env_file: notification_service.env
    build:
      context: accessory_services/webhook_service
    ports:
      - "5000:5000"
    networks:
      - network-dapr

  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"  # Redis default port
    networks:
      - network-dapr

  # MongoDB for Persistent Data
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - network-dapr

volumes:
  mongo_data:
    driver: local

networks:
  network-dapr: